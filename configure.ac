# Brainfuck autoconf input script.

AC_PREREQ([2.71])
AC_INIT([brainfuck], [0.1.0],
        [redraiment@gmail.com],
        AC_PACKAGE_NAME[-]AC_PACKAGE_VERSION,
        [https://github.com/redraiment/brainfuck/])
AC_COPYRIGHT([Copyright (c) Zhang, Zepeng <redraiment@gmail.com>])

# Checks for Programs
AC_PATH_PROG([FIND], [find])
if test -z "$FIND"; then
  AC_MSG_ERROR([Cannot found find.])
fi

AC_PATH_PROG([LEX], [flex])
if test -z "$LEX"; then
  AC_MSG_ERROR([Cannot found flex.])
fi

AC_PATH_PROG([YACC], [bison])
if test -z "$YACC"; then
  AC_MSG_ERROR([Cannot found bison.])
fi

AC_PATH_PROG([LINKER], [ld])
if test -z "$LINKER"; then
  AC_MSG_ERROR([Cannot found ld.])
fi

AC_PATH_PROG([LLVM_CONFIG], [llvm-config])
if test -z "$LLVM_CONFIG"; then
  AC_MSG_ERROR([Cannot found llvm-config.])
fi

ARCH=$(getconf LONG_BIT)
AC_SUBST(ARCH)

LIBPATH=''
if test -d /lib; then
  LIBPATH+=' /lib'
fi
if test -d /lib64; then
  LIBPATH+=' /lib64'
fi
if test -d /usr/lib; then
  LIBPATH+=' /usr/lib'
fi
if test -d /usr/lib64; then
  LIBPATH+=' /usr/lib64'
fi

AC_LANG([C])
AC_PROG_CC([])
AC_CONFIG_HEADERS([config.h])
AH_TOP([
/**
 * config.h.in is generated by autoconf/autoheader and
 * converted into config.h by configure. Include when code needs to
 * depend on determinations made by configure.
 *
 * Do not manually edit!
 */
#ifndef __CONFIG_H_
#define __CONFIG_H_

typedef int Boolean;
])
AC_DEFINE([False], [0], [Define to the false of Boolean type.])
AC_DEFINE([True], [1], [Define to the True of Boolean type.])

AC_DEFINE_UNQUOTED([LINKER], "$LINKER", [Define to linker file path.])

if test "$ARCH" = "32"; then
  if test -e "/lib/ld-linux.so.2"; then
    AC_DEFINE_UNQUOTED([LOADER], "/lib/ld-linux.so.2", [Define to loader file path.])
  else
    AC_MSG_ERROR([Cannot found /lib/ld-linux.so.2.])
  fi
else
  if test -e "/lib64/ld-linux-x86-64.so.2"; then
    AC_DEFINE_UNQUOTED([LOADER], "/lib64/ld-linux-x86-64.so.2", [Define to loader file path.])
  else
    AC_MSG_ERROR([Cannot found /lib64/ld-linux-x86-64.so.2.])
  fi
fi

SCRT1=$($FIND $LIBPATH -name Scrt1.o)
if test ! -z "$SCRT1"; then
  AC_DEFINE_UNQUOTED([C_RUNTIME_START], "$SCRT1", [Define to c runtime start])
else
  AC_MSG_ERROR([Cannot found Scrt1.o.])
fi

CRTI=$($FIND $LIBPATH -name crti.o)
if test ! -z "$CRTI"; then
  AC_DEFINE_UNQUOTED([C_RUNTIME_INIT], "$CRTI", [Define to c runtime init])
else
  AC_MSG_ERROR([Cannot found crti.o.])
fi

CRTN=$($FIND $LIBPATH -name crtn.o)
if test ! -z "$CRTN"; then
  AC_DEFINE_UNQUOTED([C_RUNTIME_FINI], "$CRTN", [Define to c runtime fini])
else
  AC_MSG_ERROR([Cannot found crtn.o.])
fi

AH_BOTTOM([
#endif
])

# Checks for libraries.

# Checks for header files.
AC_CHECK_HEADER([stdio.h])
AC_CHECK_HEADER([string.h])
AC_CHECK_HEADER([stdlib.h])
AC_CHECK_HEADER([getopt.h])
AC_CHECK_HEADER([llvm-c/Core.h])
AC_CHECK_HEADER([llvm-c/ExecutionEngine.h])
AC_CHECK_HEADER([llvm-c/Target.h])
AC_CHECK_HEADER([llvm-c/TargetMachine.h])

# Checks for typedefs, structures, and compiler characteristics.

# Checks for library functions.
AC_CHECK_FUNCS([calloc free exit atexit strlen strrchr])

AC_CONFIG_FILES([Makefile])
AC_OUTPUT

# Brainfuck autoconf input script.

AC_PREREQ([2.71])
AC_INIT([brainfuck], [0.1.0],
        [redraiment@gmail.com],
        AC_PACKAGE_NAME[-]AC_PACKAGE_VERSION,
        [https://github.com/redraiment/brainfuck/])
AC_COPYRIGHT([Copyright (c) Zhang, Zepeng <redraiment@gmail.com>])

# Checks for Programs
AC_DEFUN([FIND_PROGRAM], [
  AC_PATH_PROG([$1], [$2])
  if test -z $[$1]; then
    AC_MSG_ERROR([Cannot found $2.])
  fi
])

FIND_PROGRAM([MKDIR], [mkdir])
FIND_PROGRAM([CP], [cp])
FIND_PROGRAM([RM], [rm])
FIND_PROGRAM([TAR], [tar])
FIND_PROGRAM([FIND], [find])
FIND_PROGRAM([LEX], [flex])
FIND_PROGRAM([YACC], [bison])
FIND_PROGRAM([LINKER], [ld])
FIND_PROGRAM([LLVM_CONFIG], [llvm-config])

# Checks for static libraries.
AC_DEFUN([FIND_EXISTING_DIRS], [
  $1=''
  m4_foreach([dir], [$2], [
    if test -d dir; then
      $1+=[' ]dir[']
    fi
  ])
])

AC_DEFUN([FIND_OBJECT], [
  $1=$($FIND [$2] -name [$3])
  if test -z "[$]$1"; then
    AC_MSG_ERROR([Cannot found ]$3[.])
  fi
])

FIND_EXISTING_DIRS([LIBPATH], [/lib, /lib64x, /usr/lib, /usr/lib64])
FIND_OBJECT([CRT1], [$LIBPATH], [Scrt1.o])
FIND_OBJECT([CRTI], [$LIBPATH], [crti.o])
FIND_OBJECT([CRTN], [$LIBPATH], [crtn.o])

# Checks for dynamic libraries
ARCH=$(getconf LONG_BIT)
if test "$ARCH" = "32" -a -e "/lib/ld-linux.so.2"; then
  LOADER='/lib/ld-linux.so.2'
elif test "$ARCH" = "64" -a -e "/lib64/ld-linux-x86-64.so.2"; then
  LOADER='/lib64/ld-linux-x86-64.so.2'
else
  AC_MSG_ERROR([Cannot found ld.so.])
fi

# Checks for library functions.
AC_CHECK_FUNCS([calloc free exit atexit strlen strrchr])

# Checks for header files.
AC_CHECK_HEADER([stdio.h])
AC_CHECK_HEADER([string.h])
AC_CHECK_HEADER([stdlib.h])
AC_CHECK_HEADER([getopt.h])
AC_CHECK_HEADER([llvm-c/Core.h])
AC_CHECK_HEADER([llvm-c/ExecutionEngine.h])
AC_CHECK_HEADER([llvm-c/Target.h])
AC_CHECK_HEADER([llvm-c/TargetMachine.h])

# Checks for config.h
AC_LANG([C])
AC_PROG_CC([])
AC_CONFIG_HEADERS([config.h])
AH_TOP([
/**
 * config.h.in is generated by autoconf/autoheader and
 * converted into config.h by configure. Include when code needs to
 * depend on determinations made by configure.
 *
 * Do not manually edit!
 */
#ifndef __CONFIG_H_
#define __CONFIG_H_

typedef int Boolean;
])

AC_DEFINE([False], [0], [Define to the false of Boolean type.])
AC_DEFINE([True], [1], [Define to the True of Boolean type.])

AC_DEFINE_UNQUOTED([LINKER], "$LINKER", [Define to linker file path.])
AC_DEFINE_UNQUOTED([LOADER], "$LOADER", [Define to loader file path.])
AC_DEFINE_UNQUOTED([C_RUNTIME_START], "$CRT1", [Define to c runtime start])
AC_DEFINE_UNQUOTED([C_RUNTIME_INIT], "$CRTI", [Define to c runtime init])
AC_DEFINE_UNQUOTED([C_RUNTIME_FINI], "$CRTN", [Define to c runtime fini])

AH_BOTTOM([
#endif
])

# Checks for typedefs, structures, and compiler characteristics.

AC_CONFIG_FILES([Makefile])
AC_OUTPUT
